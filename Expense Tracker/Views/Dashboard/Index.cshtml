@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["isDashboard"] = "true";
    var quote = ViewBag.MotivationalQuote;
}


@* Summary Widgets *@

@* Last 7 days *@

<div class="row mb-4">
    <div class="col-md-4">
    <div class="d-flex flex-row widget summary income">

        <div class="d-flex flex-column justify-content-center p-5">
            <i class="fa-solid fa-dollar-sign fa-2xl"></i>
        </div>

        <div class="d-flex flex-column m-auto py-3">
            <span class="lead">Total Income (7 days)</span>    
            <h1 action="display-6 fw-bold">@ViewBag.TotalIncome</h1>
        </div>
    </div>

    </div>

    <div class="col-md-4">

    <div class="d-flex flex-row widget summary expense">

        <div class="d-flex flex-column justify-content-center p-5">
            <i class="fa-solid fa-dollar-sign fa-2xl"></i>
        </div>

        <div class="d-flex flex-column m-auto py-3">
            <span class="lead">Total Expenses (7 days)</span>    
            <h1 action="display-6 fw-bold">@ViewBag.TotalExpense</h1>
        </div>

    </div>
    </div>


    <div class="col-md-4">

    <div class="d-flex flex-row widget summary balance">

        <div class="d-flex flex-column justify-content-center p-5">
            <i class="fa-solid fa-dollar-sign fa-2xl"></i>
        </div>

        <div class="d-flex flex-column m-auto py-3">
            <span class="lead">Total Balance (7 days)</span>    
            <h1 action="display-6 fw-bold">@ViewBag.TotalBalance</h1>
        </div>

    </div>
    </div>
</div>



@* Last 30 days *@


    <div class="row mb-4">
    <div class="col-md-4">
    <div class="d-flex flex-row widget summary income">

        <div class="d-flex flex-column justify-content-center p-5">
            <i class="fa-solid fa-dollar-sign fa-2xl"></i>
        </div>

        <div class="d-flex flex-column m-auto py-3">
            <span class="lead">Total Income (30 days)</span>    
            <h1 action="display-6 fw-bold">@ViewBag.TotalIncome30</h1>
        </div>
    </div>

    </div>

    <div class="col-md-4">

    <div class="d-flex flex-row widget summary expense">

        <div class="d-flex flex-column justify-content-center p-5">
            <i class="fa-solid fa-dollar-sign fa-2xl"></i>
        </div>

        <div class="d-flex flex-column m-auto py-3">
            <span class="lead">Total Expenses (30 days)</span>    
            <h1 action="display-6 fw-bold">@ViewBag.TotalExpense30</h1>
        </div>

    </div>
    </div>


    <div class="col-md-4">

    <div class="d-flex flex-row widget summary balance">

        <div class="d-flex flex-column justify-content-center p-5">
            <i class="fa-solid fa-dollar-sign fa-2xl"></i>
        </div>

        <div class="d-flex flex-column m-auto py-3">
            <span class="lead">Total Balance (30 days)</span>    
            <h1 action="display-6 fw-bold">@ViewBag.TotalBalance30</h1>
        </div>

    </div>
    </div>
</div>



@* Last 12 months *@



    <div class="row mb-4">
    <div class="col-md-4">
    <div class="d-flex flex-row widget summary income">

        <div class="d-flex flex-column justify-content-center p-5">
            <i class="fa-solid fa-dollar-sign fa-2xl"></i>
        </div>

        <div class="d-flex flex-column m-auto py-3">
            <span class="lead">Total Income (12 months)</span>    
            <h1 action="display-6 fw-bold">@ViewBag.TotalIncome12</h1>
        </div>
    </div>

    </div>

    <div class="col-md-4">

    <div class="d-flex flex-row widget summary expense">

        <div class="d-flex flex-column justify-content-center p-5">
            <i class="fa-solid fa-dollar-sign fa-2xl"></i>
        </div>

        <div class="d-flex flex-column m-auto py-3">
            <span class="lead">Total Expenses (12 months)</span>    
            <h1 action="display-6 fw-bold">@ViewBag.TotalExpense12</h1>
        </div>

    </div>
    </div>


    <div class="col-md-4">

    <div class="d-flex flex-row widget summary balance">

        <div class="d-flex flex-column justify-content-center p-5">
            <i class="fa-solid fa-dollar-sign fa-2xl"></i>
        </div>

        <div class="d-flex flex-column m-auto py-3">
            <span class="lead">Total Balance (12 months)</span>    
            <h1 action="display-6 fw-bold">@ViewBag.TotalBalance12</h1>
        </div>

    </div>
    </div>

</div>








@*Doughnut and Spline Chart*@
<div class="row mb-4">

    <div class="col-md-4">
        <div class="widget chart">
            <div class="p-4">
                <h5 class="fw-bold">Expense By Category</h5>
            </div>
            <ejs-accumulationchart id="doughnutchart" enableSmartLabels background="#1a222b">
                <e-accumulation-series-collection>
                    <e-accumulation-series dataSource="@ViewBag.DoughnutChartData"
                                           xName="categoryTitleWithIcon" yName="amount"
                                           innerRadius="50%" legendShape="Circle" 
                                           palettes=@(new string[]{"#0e8d76","#a4b219","#cb9b00","#8a442c","#0454b5","#7d0a0a","#822690","#4c2090","#313e93","#0096ac"})>
                        <e-accumulationseries-datalabel name="formattedAmount" visible></e-accumulationseries-datalabel>
                    </e-accumulation-series>
                </e-accumulation-series-collection>
                <e-accumulationchart-legendsettings position="Top" toggleVisibility="false">
                    <e-legendsettings-textstyle color="#fff" size="1rem"></e-legendsettings-textstyle>
                </e-accumulationchart-legendsettings>
                <e-accumulationchart-tooltipsettings enable="true" format="₼${point.y}"></e-accumulationchart-tooltipsettings>
            </ejs-accumulationchart>
        </div>
    </div>


    <script id="dataLabelTemplate" type="text/x-template">
    ₼${point.y}
</script>







    @* Monthly Income and Expenses Chart *@

    <div class="col-md-8">
        <div class="widget chart" style="height: 100%;">
            <div class="p-4">
                <h5 class="fw-bold">Monthly Income and Expenses</h5>
            </div>
            <canvas id="monthlyChart"></canvas>
        </div>
    </div>
</div>

@* <pre>@Html.Raw(Json.Serialize(ViewBag.MonthlyData))</pre> *@


</div>






<div class="row mb-4">


<div class="col-md-7">


<div class="widget">
            <div class="p-4">
                <h5 class="fw-bold">Recent Transactions</h5>
            </div>

            <div class="px-4 pb-4">
                <ejs-grid id="recent-transactions" dataSource="@ViewBag.RecentTransactions" gridLines="None">
                    <e-grid-columns>
                        <e-grid-column headerText="Category" field="CategoryTitleWithIcon"></e-grid-column>
                        <e-grid-column headerText="Date" field="Date" type="date" format="dd-MMM-yy"></e-grid-column>
                        <e-grid-column headerText="Type" template="#typeColumnTemplate"></e-grid-column>
                        <e-grid-column headerText="Amount" field="FormattedAmount" textAlign="Right"></e-grid-column>
                    </e-grid-columns>
                </ejs-grid>
            </div>
        </div>
</div>




<div class="col-md-5">

<div class="widget motivational-quote">

            <div class="p-4">
                <h5 class="fw-bold">Motivational Quote</h5>
            </div>

            @if (ViewBag.MotivationalQuote != null)
            {
                                        <div class="px-4 pb-4">  

                                            <blockquote class="blockquote">
                                                <p>@ViewBag.MotivationalQuote.QuoteText</p>
                                                <footer class="blockquote-footer">@ViewBag.MotivationalQuote.Author</footer>
                                            </blockquote>

                                        </div>
            }
</div>

</div>



</div>











<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        var ctx = document.getElementById('monthlyChart').getContext('2d');

        // Ensure data is correctly passed and formatted
        var data = @Html.Raw(Json.Serialize(ViewBag.MonthlyData));

        // Debug: Check if data is valid
        console.log('Chart Data:', data);

        if (data && data.length > 0) {
            // Convert monthYear to Date for sorting
            data.forEach(d => {
    var [month, year] = d.monthYear.split(' ');
    d.date = new Date(year, new Date(Date.parse(month +" 1, 2012")).getMonth());
});


            // Sort data by date
            data.sort((a, b) => a.date - b.date);

            // Extract labels and data after sorting
            var labels = data.map(d => d.monthYear);
            var incomeData = data.map(d => d.income);
            var expenseData = data.map(d => d.expense);

            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Income',
                            data: incomeData,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderWidth: 3,
                            pointRadius: 5,
                            pointBorderColor: 'rgba(75, 192, 192, 1)',
                            pointBackgroundColor: '#fff',
                            fill: false
                        },
                        {
                            label: 'Expense',
                            data: expenseData,
                            borderColor: 'rgba(255, 99, 132, 1)',
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            borderWidth: 3,
                            pointRadius: 5,
                            pointBorderColor: 'rgba(255, 99, 132, 1)',
                            pointBackgroundColor: '#fff',
                            fill: false
                        }
                    ]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: {
                            type: 'category', 
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Month-Year'
                            },
                            ticks: {
                                autoSkip: false, 
                                maxRotation: 90, 
                                minRotation: 45
                            }
                        },
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Amount'
                            },
                            min: 0,
                            max: 4000,
                            ticks: {
                                stepSize: 500, // Interval between ticks (e.g., every 500 units)
                                callback: function(value, index, values) {
                                    return '₼' + value; 
                                }
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top',
                            labels: {
                                font: {
                                    size: 18
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return context.dataset.label + ': ₼' + context.formattedValue;
                                }
                            }
                        }
                    }
                }
            });
        } else {
            console.error('No data available for the chart');
        }
    });
</script>




<script id="typeColumnTemplate" type="text/x-template">
   ${if(Category.Type=="Income")}
   <span class="badge bg-success">${Category.Type}</span>
   ${else}
   <span class="badge bg-danger">${Category.Type}</span>
   ${/if}
</script>